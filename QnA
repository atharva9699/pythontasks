Alternative: Use AWS CloudShell
If you don't want to configure local AWS CLI:

Open AWS Console
Click CloudShell icon (top right)
Create file: nano setup_dynamodb.py
Paste the code
Run: python setup_dynamodb.py

Need help with any of these steps?



import boto3
from botocore.exceptions import ClientError
import json

class CertificationDynamoDBSetup:
    """
    Setup script for CertificationInfo DynamoDB table.
    Creates table and populates it with AWS certification data.
    """
    
    def __init__(self, region_name='us-east-1'):
        """
        Initialize with AWS DynamoDB client.
        
        Args:
            region_name: AWS region for DynamoDB
        """
        self.dynamodb = boto3.resource('dynamodb', region_name=region_name)
        self.table_name = 'CertificationInfo'
        
    def create_table(self):
        """
        Create the CertificationInfo DynamoDB table.
        
        Returns:
            Table object or None if error
        """
        try:
            table = self.dynamodb.create_table(
                TableName=self.table_name,
                KeySchema=[
                    {
                        'AttributeName': 'cert_id',
                        'KeyType': 'HASH'  # Partition key
                    }
                ],
                AttributeDefinitions=[
                    {
                        'AttributeName': 'cert_id',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'cert_level',
                        'AttributeType': 'S'
                    },
                    {
                        'AttributeName': 'cert_name',
                        'AttributeType': 'S'
                    }
                ],
                GlobalSecondaryIndexes=[
                    {
                        'IndexName': 'CertLevelIndex',
                        'KeySchema': [
                            {
                                'AttributeName': 'cert_level',
                                'KeyType': 'HASH'
                            }
                        ],
                        'Projection': {
                            'ProjectionType': 'ALL'
                        },
                        'ProvisionedThroughput': {
                            'ReadCapacityUnits': 5,
                            'WriteCapacityUnits': 5
                        }
                    },
                    {
                        'IndexName': 'CertNameIndex',
                        'KeySchema': [
                            {
                                'AttributeName': 'cert_name',
                                'KeyType': 'HASH'
                            }
                        ],
                        'Projection': {
                            'ProjectionType': 'ALL'
                        },
                        'ProvisionedThroughput': {
                            'ReadCapacityUnits': 5,
                            'WriteCapacityUnits': 5
                        }
                    }
                ],
                ProvisionedThroughput={
                    'ReadCapacityUnits': 5,
                    'WriteCapacityUnits': 5
                }
            )
            
            # Wait for table to be created
            table.meta.client.get_waiter('table_exists').wait(TableName=self.table_name)
            print(f"Table {self.table_name} created successfully!")
            return table
            
        except ClientError as e:
            if e.response['Error']['Code'] == 'ResourceInUseException':
                print(f"Table {self.table_name} already exists.")
                return self.dynamodb.Table(self.table_name)
            else:
                print(f"Error creating table: {e}")
                return None
    
    def get_certification_data(self):
        """
        Returns comprehensive AWS certification data.
        
        Returns:
            List of certification dictionaries
        """
        certifications = [
            {
                'cert_id': 'CLF-C02',
                'cert_name': 'AWS Certified Cloud Practitioner',
                'short_name': 'CCP',
                'cert_level': 'Foundational',
                'exam_code': 'CLF-C02',
                'exam_cost': 100,
                'exam_duration_minutes': 90,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 700,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'Traditional Chinese', 'Bahasa (Indonesian)', 'Spanish (Spain)', 'Spanish (Latin America)', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)'],
                'domains': [
                    {'name': 'Cloud Concepts', 'percentage': 24},
                    {'name': 'Security and Compliance', 'percentage': 30},
                    {'name': 'Cloud Technology and Services', 'percentage': 34},
                    {'name': 'Billing, Pricing, and Support', 'percentage': 12}
                ],
                'prerequisites': 'None - suitable for beginners',
                'target_audience': 'Individuals with basic understanding of IT services and AWS Cloud',
                'recommended_experience': '6 months of exposure to AWS Cloud',
                'difficulty_level': 'Foundational',
                'exam_tips': 'The Cloud Practitioner exam tests your understanding of AWS Cloud concepts, services, and basic architecture principles. Focus on understanding the AWS Well-Architected Framework, basic AWS services, and billing/pricing models.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Multiple choice and multiple response questions',
                'study_resources': ['AWS Certified Cloud Practitioner Official Study Guide', 'AWS Skill Builder', 'AWS Whitepapers']
            },
            {
                'cert_id': 'SAA-C03',
                'cert_name': 'AWS Certified Solutions Architect - Associate',
                'short_name': 'SAA',
                'cert_level': 'Associate',
                'exam_code': 'SAA-C03',
                'exam_cost': 150,
                'exam_duration_minutes': 130,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 720,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'Traditional Chinese', 'Bahasa (Indonesian)', 'Spanish (Spain)', 'Spanish (Latin America)', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)'],
                'domains': [
                    {'name': 'Design Secure Architectures', 'percentage': 30},
                    {'name': 'Design Resilient Architectures', 'percentage': 26},
                    {'name': 'Design High-Performing Architectures', 'percentage': 24},
                    {'name': 'Design Cost-Optimized Architectures', 'percentage': 20}
                ],
                'prerequisites': 'Cloud Practitioner certification recommended but not required',
                'target_audience': 'Solutions architects, solution design engineers',
                'recommended_experience': '1 year of hands-on experience designing distributed systems on AWS',
                'difficulty_level': 'Associate',
                'exam_tips': 'Focus on understanding the differences between similar AWS services (e.g., EBS vs EFS, ALB vs NLB). Understand when to use each service. Practice designing architectures for different scenarios considering security, cost, performance, and reliability.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Scenario-based questions with multiple choice and multiple response',
                'study_resources': ['AWS Certified Solutions Architect Study Guide', 'AWS Well-Architected Framework', 'AWS Architecture Center']
            },
            {
                'cert_id': 'DVA-C02',
                'cert_name': 'AWS Certified Developer - Associate',
                'short_name': 'DVA',
                'cert_level': 'Associate',
                'exam_code': 'DVA-C02',
                'exam_cost': 150,
                'exam_duration_minutes': 130,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 720,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'Traditional Chinese', 'Spanish (Spain)', 'Spanish (Latin America)', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)'],
                'domains': [
                    {'name': 'Development with AWS Services', 'percentage': 32},
                    {'name': 'Security', 'percentage': 26},
                    {'name': 'Deployment', 'percentage': 24},
                    {'name': 'Troubleshooting and Optimization', 'percentage': 18}
                ],
                'prerequisites': 'Cloud Practitioner certification recommended but not required',
                'target_audience': 'Software developers, DevOps engineers',
                'recommended_experience': '1+ years of hands-on experience developing and maintaining AWS-based applications',
                'difficulty_level': 'Associate',
                'exam_tips': 'Focus heavily on serverless technologies (Lambda, API Gateway, DynamoDB), deployment strategies (CodeDeploy, CodePipeline), and AWS SDK usage. Understand IAM roles and policies deeply.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Code-focused scenario questions with multiple choice and multiple response',
                'study_resources': ['AWS Certified Developer Official Study Guide', 'AWS SDK Documentation', 'AWS Developer Tools']
            },
            {
                'cert_id': 'SOA-C02',
                'cert_name': 'AWS Certified SysOps Administrator - Associate',
                'short_name': 'SOA',
                'cert_level': 'Associate',
                'exam_code': 'SOA-C02',
                'exam_cost': 150,
                'exam_duration_minutes': 130,
                'number_of_questions': 65,
                'question_types': 'Multiple choice, multiple response, and exam labs',
                'passing_score': 720,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Monitoring, Logging, and Remediation', 'percentage': 20},
                    {'name': 'Reliability and Business Continuity', 'percentage': 16},
                    {'name': 'Deployment, Provisioning, and Automation', 'percentage': 18},
                    {'name': 'Security and Compliance', 'percentage': 16},
                    {'name': 'Networking and Content Delivery', 'percentage': 18},
                    {'name': 'Cost and Performance Optimization', 'percentage': 12}
                ],
                'prerequisites': 'Cloud Practitioner certification recommended but not required',
                'target_audience': 'Systems administrators, DevOps engineers, operations roles',
                'recommended_experience': '1+ years of hands-on experience with AWS workload deployment and operations',
                'difficulty_level': 'Associate',
                'exam_tips': 'This exam includes hands-on labs! Practice using CloudWatch, Systems Manager, CloudFormation, and troubleshooting common AWS issues. Understand backup strategies, monitoring, and automation.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Multiple choice, multiple response, and hands-on exam labs',
                'study_resources': ['AWS Certified SysOps Administrator Study Guide', 'AWS Systems Manager', 'CloudWatch Documentation']
            },
            {
                'cert_id': 'SAP-C02',
                'cert_name': 'AWS Certified Solutions Architect - Professional',
                'short_name': 'SAP',
                'cert_level': 'Professional',
                'exam_code': 'SAP-C02',
                'exam_cost': 300,
                'exam_duration_minutes': 180,
                'number_of_questions': 75,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Design Solutions for Organizational Complexity', 'percentage': 26},
                    {'name': 'Design for New Solutions', 'percentage': 29},
                    {'name': 'Continuous Improvement for Existing Solutions', 'percentage': 25},
                    {'name': 'Accelerate Workload Migration and Modernization', 'percentage': 20}
                ],
                'prerequisites': 'Solutions Architect Associate certification recommended, 2+ years AWS experience',
                'target_audience': 'Senior solutions architects, technical architects',
                'recommended_experience': '2+ years of hands-on experience designing and deploying cloud architecture on AWS',
                'difficulty_level': 'Professional',
                'exam_tips': 'The Solutions Architect Professional exam features complex scenario-based questions where answer options are very similar. You need deep knowledge of service differences, limitations, and integration patterns. Focus on hybrid architectures, migration strategies, and cost optimization at scale. Time management is crucial - 180 minutes for 75 questions.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Complex scenario-based questions with multiple choice and multiple response',
                'study_resources': ['AWS Well-Architected Framework', 'AWS Architecture Center', 'AWS Whitepapers on Migration and Modernization']
            },
            {
                'cert_id': 'DOP-C02',
                'cert_name': 'AWS Certified DevOps Engineer - Professional',
                'short_name': 'DOP',
                'cert_level': 'Professional',
                'exam_code': 'DOP-C02',
                'exam_cost': 300,
                'exam_duration_minutes': 180,
                'number_of_questions': 75,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'SDLC Automation', 'percentage': 22},
                    {'name': 'Configuration Management and Infrastructure as Code', 'percentage': 17},
                    {'name': 'Resilient Cloud Solutions', 'percentage': 15},
                    {'name': 'Monitoring and Logging', 'percentage': 15},
                    {'name': 'Incident and Event Response', 'percentage': 14},
                    {'name': 'Security and Compliance', 'percentage': 17}
                ],
                'prerequisites': 'Developer or SysOps Associate certification recommended, 2+ years AWS experience',
                'target_audience': 'DevOps engineers, site reliability engineers, automation engineers',
                'recommended_experience': '2+ years of experience provisioning, operating, and managing AWS environments',
                'difficulty_level': 'Professional',
                'exam_tips': 'Focus on automation, CI/CD pipelines (CodePipeline, CodeBuild, CodeDeploy), infrastructure as code (CloudFormation, CDK), and monitoring/logging at scale. Understand blue/green deployments, canary deployments, and rollback strategies.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Scenario-based questions focused on automation and DevOps practices',
                'study_resources': ['AWS DevOps Documentation', 'AWS CodePipeline User Guide', 'CloudFormation Best Practices']
            },
            {
                'cert_id': 'ANS-C01',
                'cert_name': 'AWS Certified Advanced Networking - Specialty',
                'short_name': 'ANS',
                'cert_level': 'Specialty',
                'exam_code': 'ANS-C01',
                'exam_cost': 300,
                'exam_duration_minutes': 170,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese'],
                'domains': [
                    {'name': 'Network Design', 'percentage': 30},
                    {'name': 'Network Implementation', 'percentage': 26},
                    {'name': 'Network Management and Operations', 'percentage': 20},
                    {'name': 'Network Security, Compliance, and Governance', 'percentage': 24}
                ],
                'prerequisites': 'Associate-level certification and 5+ years networking experience recommended',
                'target_audience': 'Network engineers, network architects',
                'recommended_experience': '5+ years of hands-on experience implementing network solutions',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Deep dive into VPC design patterns, Direct Connect, Transit Gateway, hybrid networking, and advanced routing. Understand BGP, VPN configurations, and network security at scale.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Technical networking scenarios with multiple choice and multiple response',
                'study_resources': ['AWS Networking Documentation', 'VPC User Guide', 'Direct Connect Documentation']
            },
            {
                'cert_id': 'SCS-C02',
                'cert_name': 'AWS Certified Security - Specialty',
                'short_name': 'SCS',
                'cert_level': 'Specialty',
                'exam_code': 'SCS-C02',
                'exam_cost': 300,
                'exam_duration_minutes': 170,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Threat Detection and Incident Response', 'percentage': 14},
                    {'name': 'Security Logging and Monitoring', 'percentage': 18},
                    {'name': 'Infrastructure Security', 'percentage': 20},
                    {'name': 'Identity and Access Management', 'percentage': 16},
                    {'name': 'Data Protection', 'percentage': 18},
                    {'name': 'Management and Security Governance', 'percentage': 14}
                ],
                'prerequisites': 'Associate-level certification and 2+ years security experience recommended',
                'target_audience': 'Security engineers, security architects, compliance specialists',
                'recommended_experience': '2+ years of hands-on experience securing AWS workloads',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Master IAM policies (resource-based, identity-based, SCPs), KMS, encryption at rest and in transit, GuardDuty, Security Hub, and incident response procedures. Understand compliance frameworks.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Security scenario-based questions with multiple choice and multiple response',
                'study_resources': ['AWS Security Best Practices', 'IAM User Guide', 'AWS Security Hub Documentation']
            },
            {
                'cert_id': 'DAS-C01',
                'cert_name': 'AWS Certified Data Analytics - Specialty',
                'short_name': 'DAS',
                'cert_level': 'Specialty',
                'exam_code': 'DAS-C01',
                'exam_cost': 300,
                'exam_duration_minutes': 180,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Collection', 'percentage': 18},
                    {'name': 'Storage and Data Management', 'percentage': 22},
                    {'name': 'Processing', 'percentage': 24},
                    {'name': 'Analysis and Visualization', 'percentage': 18},
                    {'name': 'Security', 'percentage': 18}
                ],
                'prerequisites': 'Associate-level certification and 2+ years data analytics experience recommended',
                'target_audience': 'Data analysts, data engineers, business intelligence developers',
                'recommended_experience': '2+ years of hands-on experience with AWS data analytics services',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Focus on the complete data lifecycle: Kinesis for streaming, Glue for ETL, Athena for querying, QuickSight for visualization, and Redshift for data warehousing. Understand when to use each service and how they integrate.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Data analytics scenario questions with multiple choice and multiple response',
                'study_resources': ['AWS Analytics Services Documentation', 'Kinesis User Guide', 'Athena Documentation']
            },
            {
                'cert_id': 'MLS-C01',
                'cert_name': 'AWS Certified Machine Learning - Specialty',
                'short_name': 'MLS',
                'cert_level': 'Specialty',
                'exam_code': 'MLS-C01',
                'exam_cost': 300,
                'exam_duration_minutes': 170,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Data Engineering', 'percentage': 20},
                    {'name': 'Exploratory Data Analysis', 'percentage': 24},
                    {'name': 'Modeling', 'percentage': 36},
                    {'name': 'Machine Learning Implementation and Operations', 'percentage': 20}
                ],
                'prerequisites': 'Associate-level certification and 1-2 years ML/DL experience recommended',
                'target_audience': 'ML engineers, data scientists, AI developers',
                'recommended_experience': '1-2 years of hands-on experience developing, training, and deploying ML models on AWS',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Master SageMaker (training, deployment, endpoints), understand ML algorithms deeply, know when to use which algorithm, and understand data preparation techniques. Focus on model optimization and deployment strategies.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'ML scenario-based questions with multiple choice and multiple response',
                'study_resources': ['SageMaker Developer Guide', 'AWS ML Documentation', 'Machine Learning on AWS']
            },
            {
                'cert_id': 'DBS-C01',
                'cert_name': 'AWS Certified Database - Specialty',
                'short_name': 'DBS',
                'cert_level': 'Specialty',
                'exam_code': 'DBS-C01',
                'exam_cost': 300,
                'exam_duration_minutes': 180,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese', 'French (France)', 'German', 'Italian', 'Portuguese (Brazil)', 'Spanish (Spain)', 'Spanish (Latin America)'],
                'domains': [
                    {'name': 'Workload-Specific Database Design', 'percentage': 26},
                    {'name': 'Deployment and Migration', 'percentage': 20},
                    {'name': 'Management and Operations', 'percentage': 18},
                    {'name': 'Monitoring and Troubleshooting', 'percentage': 18},
                    {'name': 'Database Security', 'percentage': 18}
                ],
                'prerequisites': 'Associate-level certification and 2+ years database experience recommended',
                'target_audience': 'Database administrators, database architects, data engineers',
                'recommended_experience': '2+ years of hands-on experience with AWS database services',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Understand the differences between RDS, Aurora, DynamoDB, ElastiCache, Neptune, DocumentDB, and Redshift. Know when to use each database type (relational, NoSQL, graph, in-memory). Focus on migration strategies and performance optimization.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'Database scenario-based questions with multiple choice and multiple response',
                'study_resources': ['AWS Database Services Documentation', 'RDS Best Practices', 'DynamoDB Developer Guide']
            },
            {
                'cert_id': 'PAS-C01',
                'cert_name': 'AWS Certified SAP on AWS - Specialty',
                'short_name': 'PAS',
                'cert_level': 'Specialty',
                'exam_code': 'PAS-C01',
                'exam_cost': 300,
                'exam_duration_minutes': 170,
                'number_of_questions': 65,
                'question_types': 'Multiple choice and multiple response',
                'passing_score': 750,
                'score_range': '100-1000',
                'validity_years': 3,
                'languages': ['English', 'Japanese', 'Korean', 'Simplified Chinese'],
                'domains': [
                    {'name': 'Design SAP workloads on AWS', 'percentage': 30},
                    {'name': 'Implement SAP workloads on AWS', 'percentage': 28},
                    {'name': 'Migrate SAP workloads to AWS', 'percentage': 22},
                    {'name': 'Operate and optimize SAP workloads on AWS', 'percentage': 20}
                ],
                'prerequisites': 'Experience with SAP and AWS recommended',
                'target_audience': 'SAP architects, SAP consultants, SAP administrators',
                'recommended_experience': 'Experience with SAP and 1+ years of AWS experience',
                'difficulty_level': 'Specialty',
                'exam_tips': 'Understand SAP architecture on AWS, migration strategies (homogeneous and heterogeneous), high availability setups, and disaster recovery. Know SAP-specific AWS services and best practices.',
                'delivery_method': 'Pearson VUE testing center or online proctored exam',
                'exam_format': 'SAP on AWS scenario questions with multiple choice and multiple response',
                'study_resources': ['SAP on AWS Documentation', 'AWS SAP Lens', 'SAP Migration Guide']
            }
        ]
        
        return certifications
    
    def populate_table(self):
        """
        Populate the CertificationInfo table with AWS certification data.
        
        Returns:
            Boolean indicating success
        """
        try:
            table = self.dynamodb.Table(self.table_name)
            certifications = self.get_certification_data()
            
            with table.batch_writer() as batch:
                for cert in certifications:
                    batch.put_item(Item=cert)
                    print(f"Added: {cert['cert_name']}")
            
            print(f"\nSuccessfully populated {len(certifications)} certifications!")
            return True
            
        except ClientError as e:
            print(f"Error populating table: {e}")
            return False
    
    def query_by_level(self, level):
        """
        Query certifications by level.
        
        Args:
            level: Certification level (Foundational, Associate, Professional, Specialty)
            
        Returns:
            List of certifications
        """
        try:
            table = self.dynamodb.Table(self.table_name)
            response = table.query(
                IndexName='CertLevelIndex',
                KeyConditionExpression='cert_level = :level',
                ExpressionAttributeValues={
                    ':level': level
                }
            )
            return response.get('Items', [])
        except ClientError as e:
            print(f"Error querying by level: {e}")
            return []
    
    def get_certification_by_name(self, cert_name):
        """
        Get certification by name using GSI.
        
        Args:
            cert_name: Certification name
            
        Returns:
            Certification item or None
        """
        try:
            table = self.dynamodb.Table(self.table_name)
            response = table.query(
                IndexName='CertNameIndex',
                KeyConditionExpression='cert_name = :name',
                ExpressionAttributeValues={
                    ':name': cert_name
                }
            )
            items = response.get('Items', [])
            return items[0] if items else None
        except ClientError as e:
            print(f"Error getting certification by name: {e}")
            return None
    
    def list_all_certifications(self):
        """
        List all certifications in the table.
        
        Returns:
            List of all certifications
        """
        try:
            table = self.dynamodb.Table(self.table_name)
            response = table.scan()
            return response.get('Items', [])
        except ClientError as e:
            print(f"Error listing certifications: {e}")
            return []
    
    def setup_complete_database(self):
        """
        Complete setup: create table and populate with data.
        
        Returns:
            Boolean indicating success
        """
        print("Starting CertificationInfo DynamoDB setup...")
        print("=" * 60)
        
        # Create table
        table = self.create_table()
        if not table:
            return False
        
        print("\nPopulating table with AWS certification data...")
        print("-" * 60)
        
        # Populate data
        success = self.populate_table()
        
        if success:
            print("\n" + "=" * 60)
            print("Setup complete!")
            print(f"Total certifications in database: {len(self.get_certification_data())}")
            
        return success


# Main execution
if __name__ == "__main__":
    # Initialize setup
    setup = CertificationDynamoDBSetup(region_name='us-east-1')
    
    # Run complete setup
    setup.setup_complete_database()
    
    # Example queries
    print("\n\n" + "=" * 60)
    print("EXAMPLE QUERIES")
    print("=" * 60)
    
    # Query Associate level certifications
    print("\n1. Associate Level Certifications:")
    associate_certs = setup.query_by_level('Associate')
    for cert in associate_certs:
        print(f"   - {cert['cert_name']} (${cert['exam_cost']})")
    
    # Get specific certification
    print("\n2. Solutions Architect Associate Details:")
    saa = setup.get_certification_by_name('AWS Certified Solutions Architect - Associate')
    if saa:
        print(f"   Exam Code: {saa['exam_code']}")
        print(f"   Duration: {saa['exam_duration_minutes']} minutes")
        print(f"   Cost: ${saa['exam_cost']}")
        print(f"   Passing Score: {saa['passing_score']}")
    
    # List all certifications
    print("\n3. All Available Certifications:")
    all_certs = setup.list_all_certifications()
    for cert in sorted(all_certs, key=lambda x: x['cert_level']):
        print(f"   [{cert['cert_level']}] {cert['cert_name']}")




##uhfihwdhfod[



import boto3
from botocore.exceptions import ClientError
from boto3.dynamodb.conditions import Key


class CertificationDynamoDB:
    def __init__(self, region_name="us-east-1"):
        self.dynamodb = boto3.resource("dynamodb", region_name=region_name)
        self.table_name = "CertificationInfo"

    # ------------------------
    # TABLE CREATION
    # ------------------------
    def create_table(self):
        try:
            table = self.dynamodb.create_table(
                TableName=self.table_name,
                KeySchema=[{"AttributeName": "cert_id", "KeyType": "HASH"}],
                AttributeDefinitions=[
                    {"AttributeName": "cert_id", "AttributeType": "S"},
                    {"AttributeName": "cert_level", "AttributeType": "S"},
                    {"AttributeName": "cert_name", "AttributeType": "S"},
                ],
                GlobalSecondaryIndexes=[
                    {
                        "IndexName": "CertLevelIndex",
                        "KeySchema": [{"AttributeName": "cert_level", "KeyType": "HASH"}],
                        "Projection": {"ProjectionType": "ALL"},
                        "ProvisionedThroughput": {"ReadCapacityUnits": 5, "WriteCapacityUnits": 5},
                    },
                    {
                        "IndexName": "CertNameIndex",
                        "KeySchema": [{"AttributeName": "cert_name", "KeyType": "HASH"}],
                        "Projection": {"ProjectionType": "ALL"},
                        "ProvisionedThroughput": {"ReadCapacityUnits": 5, "WriteCapacityUnits": 5},
                    },
                ],
                ProvisionedThroughput={"ReadCapacityUnits": 5, "WriteCapacityUnits": 5},
            )

            table.meta.client.get_waiter("table_exists").wait(TableName=self.table_name)
            print(f"✅ Table {self.table_name} created successfully!")
            return table

        except ClientError as e:
            if e.response["Error"]["Code"] == "ResourceInUseException":
                print(f"ℹ️ Table {self.table_name} already exists.")
                return self.dynamodb.Table(self.table_name)
            else:
                raise

    # ------------------------
    # CERTIFICATION DATA
    # ------------------------
    def get_certification_data(self):
        return [
            # --- Foundational ---
            {
                "cert_id": "CLF-C02",
                "cert_name": "AWS Certified Cloud Practitioner",
                "short_name": "CCP",
                "cert_level": "Foundational",
                "exam_code": "CLF-C02",
                "exam_cost": 100,
                "exam_duration_minutes": 90,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 700,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            # --- Associate ---
            {
                "cert_id": "SAA-C03",
                "cert_name": "AWS Certified Solutions Architect - Associate",
                "short_name": "SAA",
                "cert_level": "Associate",
                "exam_code": "SAA-C03",
                "exam_cost": 150,
                "exam_duration_minutes": 130,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 720,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            {
                "cert_id": "DVA-C02",
                "cert_name": "AWS Certified Developer - Associate",
                "short_name": "DVA",
                "cert_level": "Associate",
                "exam_code": "DVA-C02",
                "exam_cost": 150,
                "exam_duration_minutes": 130,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 720,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            {
                "cert_id": "SOA-C02",
                "cert_name": "AWS Certified SysOps Administrator - Associate",
                "short_name": "SOA",
                "cert_level": "Associate",
                "exam_code": "SOA-C02",
                "exam_cost": 150,
                "exam_duration_minutes": 130,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 720,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            # --- Professional ---
            {
                "cert_id": "SAP-C02",
                "cert_name": "AWS Certified Solutions Architect - Professional",
                "short_name": "SAP",
                "cert_level": "Professional",
                "exam_code": "SAP-C02",
                "exam_cost": 300,
                "exam_duration_minutes": 180,
                "number_of_questions": 75,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 750,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            {
                "cert_id": "DAP-C02",
                "cert_name": "AWS Certified DevOps Engineer - Professional",
                "short_name": "DAP",
                "cert_level": "Professional",
                "exam_code": "DAP-C02",
                "exam_cost": 300,
                "exam_duration_minutes": 180,
                "number_of_questions": 75,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 750,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            # --- Specialty ---
            {
                "cert_id": "ANS-C01",
                "cert_name": "AWS Certified Advanced Networking - Specialty",
                "short_name": "ANS",
                "cert_level": "Specialty",
                "exam_code": "ANS-C01",
                "exam_cost": 300,
                "exam_duration_minutes": 170,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 750,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            {
                "cert_id": "SCS-C02",
                "cert_name": "AWS Certified Security - Specialty",
                "short_name": "SCS",
                "cert_level": "Specialty",
                "exam_code": "SCS-C02",
                "exam_cost": 300,
                "exam_duration_minutes": 170,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 750,
                "score_range": "100-1000",
                "validity_years": 3,
            },
            {
                "cert_id": "MLS-C01",
                "cert_name": "AWS Certified Machine Learning - Specialty",
                "short_name": "MLS",
                "cert_level": "Specialty",
                "exam_code": "MLS-C01",
                "exam_cost": 300,
                "exam_duration_minutes": 180,
                "number_of_questions": 65,
                "question_types": "Multiple choice and multiple response",
                "passing_score": 750,
                "score_range": "100-1000",
                "validity_years": 3,
            },
        ]

    # ------------------------
    # POPULATE DATA
    # ------------------------
    def populate_table(self):
        table = self.dynamodb.Table(self.table_name)
        certifications = self.get_certification_data()

        with table.batch_writer() as batch:
            for cert in certifications:
                batch.put_item(Item=cert)
                print(f"Added: {cert['cert_name']}")

        print(f"\n✅ Successfully populated {len(certifications)} certifications!")

    # ------------------------
    # QUERY FUNCTIONS
    # ------------------------
    def query_by_level(self, level):
        table = self.dynamodb.Table(self.table_name)
        response = table.query(
            IndexName="CertLevelIndex",
            KeyConditionExpression=Key("cert_level").eq(level),
        )
        return response["Items"]

    def get_certification_by_name(self, cert_name):
        table = self.dynamodb.Table(self.table_name)
        response = table.query(
            IndexName="CertNameIndex",
            KeyConditionExpression=Key("cert_name").eq(cert_name),
        )
        return response["Items"][0] if response["Items"] else None

    def list_all_certifications(self):
        table = self.dynamodb.Table(self.table_name)
        response = table.scan()
        return response["Items"]


# ------------------------
# MAIN EXECUTION
# ------------------------
if __name__ == "__main__":
    db = CertificationDynamoDB(region_name="us-east-1")

    # Step 1: Create table (only first time)
    db.create_table()

    # Step 2: Populate data
    db.populate_table()

    # Step 3: Example queries
    print("\n--- All Associate Level Certifications ---")
    for cert in db.query_by_level("Associate"):
        print(f"- {cert['cert_name']} (${cert['exam_cost']})")

    print("\n--- Details for Solutions Architect Professional ---")
    sap = db.get_certification_by_name("AWS Certified Solutions Architect - Professional")
    if sap:
        print(sap)

    print("\n--- List All Certifications ---")
    for cert in db.list_all_certifications():
        print(f"[{cert['cert_level']}] {cert['cert_name']}")
